[
    {
        "label": "logging",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "logging",
        "description": "logging",
        "detail": "logging",
        "documentation": {}
    },
    {
        "label": "random",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "random",
        "description": "random",
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "randint",
        "importPath": "random",
        "description": "random",
        "isExtraImport": true,
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "http",
        "importPath": "odoo",
        "description": "odoo",
        "isExtraImport": true,
        "detail": "odoo",
        "documentation": {}
    },
    {
        "label": "fields",
        "importPath": "odoo",
        "description": "odoo",
        "isExtraImport": true,
        "detail": "odoo",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "odoo",
        "description": "odoo",
        "isExtraImport": true,
        "detail": "odoo",
        "documentation": {}
    },
    {
        "label": "fields",
        "importPath": "odoo",
        "description": "odoo",
        "isExtraImport": true,
        "detail": "odoo",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "odoo",
        "description": "odoo",
        "isExtraImport": true,
        "detail": "odoo",
        "documentation": {}
    },
    {
        "label": "http",
        "importPath": "odoo",
        "description": "odoo",
        "isExtraImport": true,
        "detail": "odoo",
        "documentation": {}
    },
    {
        "label": "api",
        "importPath": "odoo",
        "description": "odoo",
        "isExtraImport": true,
        "detail": "odoo",
        "documentation": {}
    },
    {
        "label": "fields",
        "importPath": "odoo",
        "description": "odoo",
        "isExtraImport": true,
        "detail": "odoo",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "odoo",
        "description": "odoo",
        "isExtraImport": true,
        "detail": "odoo",
        "documentation": {}
    },
    {
        "label": "api",
        "importPath": "odoo",
        "description": "odoo",
        "isExtraImport": true,
        "detail": "odoo",
        "documentation": {}
    },
    {
        "label": "fields",
        "importPath": "odoo",
        "description": "odoo",
        "isExtraImport": true,
        "detail": "odoo",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "odoo",
        "description": "odoo",
        "isExtraImport": true,
        "detail": "odoo",
        "documentation": {}
    },
    {
        "label": "http",
        "importPath": "odoo",
        "description": "odoo",
        "isExtraImport": true,
        "detail": "odoo",
        "documentation": {}
    },
    {
        "label": "fields",
        "importPath": "odoo",
        "description": "odoo",
        "isExtraImport": true,
        "detail": "odoo",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "odoo",
        "description": "odoo",
        "isExtraImport": true,
        "detail": "odoo",
        "documentation": {}
    },
    {
        "label": "api",
        "importPath": "odoo",
        "description": "odoo",
        "isExtraImport": true,
        "detail": "odoo",
        "documentation": {}
    },
    {
        "label": "_",
        "importPath": "odoo",
        "description": "odoo",
        "isExtraImport": true,
        "detail": "odoo",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "odoo",
        "description": "odoo",
        "isExtraImport": true,
        "detail": "odoo",
        "documentation": {}
    },
    {
        "label": "fields",
        "importPath": "odoo",
        "description": "odoo",
        "isExtraImport": true,
        "detail": "odoo",
        "documentation": {}
    },
    {
        "label": "api",
        "importPath": "odoo",
        "description": "odoo",
        "isExtraImport": true,
        "detail": "odoo",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "odoo",
        "description": "odoo",
        "isExtraImport": true,
        "detail": "odoo",
        "documentation": {}
    },
    {
        "label": "fields",
        "importPath": "odoo",
        "description": "odoo",
        "isExtraImport": true,
        "detail": "odoo",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "odoo",
        "description": "odoo",
        "isExtraImport": true,
        "detail": "odoo",
        "documentation": {}
    },
    {
        "label": "fields",
        "importPath": "odoo",
        "description": "odoo",
        "isExtraImport": true,
        "detail": "odoo",
        "documentation": {}
    },
    {
        "label": "api",
        "importPath": "odoo",
        "description": "odoo",
        "isExtraImport": true,
        "detail": "odoo",
        "documentation": {}
    },
    {
        "label": "fields",
        "importPath": "odoo",
        "description": "odoo",
        "isExtraImport": true,
        "detail": "odoo",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "odoo",
        "description": "odoo",
        "isExtraImport": true,
        "detail": "odoo",
        "documentation": {}
    },
    {
        "label": "api",
        "importPath": "odoo",
        "description": "odoo",
        "isExtraImport": true,
        "detail": "odoo",
        "documentation": {}
    },
    {
        "label": "fields",
        "importPath": "odoo",
        "description": "odoo",
        "isExtraImport": true,
        "detail": "odoo",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "odoo",
        "description": "odoo",
        "isExtraImport": true,
        "detail": "odoo",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "odoo",
        "description": "odoo",
        "isExtraImport": true,
        "detail": "odoo",
        "documentation": {}
    },
    {
        "label": "Command",
        "importPath": "odoo",
        "description": "odoo",
        "isExtraImport": true,
        "detail": "odoo",
        "documentation": {}
    },
    {
        "label": "api",
        "importPath": "odoo",
        "description": "odoo",
        "isExtraImport": true,
        "detail": "odoo",
        "documentation": {}
    },
    {
        "label": "fields",
        "importPath": "odoo",
        "description": "odoo",
        "isExtraImport": true,
        "detail": "odoo",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "odoo",
        "description": "odoo",
        "isExtraImport": true,
        "detail": "odoo",
        "documentation": {}
    },
    {
        "label": "api",
        "importPath": "odoo",
        "description": "odoo",
        "isExtraImport": true,
        "detail": "odoo",
        "documentation": {}
    },
    {
        "label": "fields",
        "importPath": "odoo",
        "description": "odoo",
        "isExtraImport": true,
        "detail": "odoo",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "odoo",
        "description": "odoo",
        "isExtraImport": true,
        "detail": "odoo",
        "documentation": {}
    },
    {
        "label": "request",
        "importPath": "odoo.http",
        "description": "odoo.http",
        "isExtraImport": true,
        "detail": "odoo.http",
        "documentation": {}
    },
    {
        "label": "request",
        "importPath": "odoo.http",
        "description": "odoo.http",
        "isExtraImport": true,
        "detail": "odoo.http",
        "documentation": {}
    },
    {
        "label": "route",
        "importPath": "odoo.http",
        "description": "odoo.http",
        "isExtraImport": true,
        "detail": "odoo.http",
        "documentation": {}
    },
    {
        "label": "request",
        "importPath": "odoo.http",
        "description": "odoo.http",
        "isExtraImport": true,
        "detail": "odoo.http",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "UserError",
        "importPath": "odoo.exceptions",
        "description": "odoo.exceptions",
        "isExtraImport": true,
        "detail": "odoo.exceptions",
        "documentation": {}
    },
    {
        "label": "ValidationError",
        "importPath": "odoo.exceptions",
        "description": "odoo.exceptions",
        "isExtraImport": true,
        "detail": "odoo.exceptions",
        "documentation": {}
    },
    {
        "label": "UserError",
        "importPath": "odoo.exceptions",
        "description": "odoo.exceptions",
        "isExtraImport": true,
        "detail": "odoo.exceptions",
        "documentation": {}
    },
    {
        "label": "ValidationError",
        "importPath": "odoo.exceptions",
        "description": "odoo.exceptions",
        "isExtraImport": true,
        "detail": "odoo.exceptions",
        "documentation": {}
    },
    {
        "label": "ValidationError",
        "importPath": "odoo.exceptions",
        "description": "odoo.exceptions",
        "isExtraImport": true,
        "detail": "odoo.exceptions",
        "documentation": {}
    },
    {
        "label": "relativedelta",
        "importPath": "dateutil.relativedelta",
        "description": "dateutil.relativedelta",
        "isExtraImport": true,
        "detail": "dateutil.relativedelta",
        "documentation": {}
    },
    {
        "label": "relativedelta",
        "importPath": "dateutil.relativedelta",
        "description": "dateutil.relativedelta",
        "isExtraImport": true,
        "detail": "dateutil.relativedelta",
        "documentation": {}
    },
    {
        "label": "relativedelta",
        "importPath": "dateutil.relativedelta",
        "description": "dateutil.relativedelta",
        "isExtraImport": true,
        "detail": "dateutil.relativedelta",
        "documentation": {}
    },
    {
        "label": "AwesomeDashboard",
        "kind": 6,
        "importPath": "awesome_dashboard.controllers.controllers",
        "description": "awesome_dashboard.controllers.controllers",
        "peekOfCode": "class AwesomeDashboard(http.Controller):\n    @http.route('/awesome_dashboard/statistics', type='json', auth='user')\n    def get_statistics(self):\n        \"\"\"\n        Returns a dict of statistics about the orders:\n            'average_quantity': the average number of t-shirts by order\n            'average_time': the average time (in hours) elapsed between the\n                moment an order is created, and the moment is it sent\n            'nb_cancelled_orders': the number of cancelled orders, this month\n            'nb_new_orders': the number of new orders, this month",
        "detail": "awesome_dashboard.controllers.controllers",
        "documentation": {}
    },
    {
        "label": "logger",
        "kind": 5,
        "importPath": "awesome_dashboard.controllers.controllers",
        "description": "awesome_dashboard.controllers.controllers",
        "peekOfCode": "logger = logging.getLogger(__name__)\nclass AwesomeDashboard(http.Controller):\n    @http.route('/awesome_dashboard/statistics', type='json', auth='user')\n    def get_statistics(self):\n        \"\"\"\n        Returns a dict of statistics about the orders:\n            'average_quantity': the average number of t-shirts by order\n            'average_time': the average time (in hours) elapsed between the\n                moment an order is created, and the moment is it sent\n            'nb_cancelled_orders': the number of cancelled orders, this month",
        "detail": "awesome_dashboard.controllers.controllers",
        "documentation": {}
    },
    {
        "label": "ActWindowView",
        "kind": 6,
        "importPath": "awesome_gallery.models.ir_action",
        "description": "awesome_gallery.models.ir_action",
        "peekOfCode": "class ActWindowView(models.Model):\n    _inherit = 'ir.actions.act_window.view'\n    view_mode = fields.Selection(selection_add=[\n        ('gallery', \"Awesome Gallery\")\n    ],  ondelete={'gallery': 'cascade'})",
        "detail": "awesome_gallery.models.ir_action",
        "documentation": {}
    },
    {
        "label": "View",
        "kind": 6,
        "importPath": "awesome_gallery.models.ir_ui_view",
        "description": "awesome_gallery.models.ir_ui_view",
        "peekOfCode": "class View(models.Model):\n    _inherit = 'ir.ui.view'\n    type = fields.Selection(selection_add=[('gallery', \"Awesome Gallery\")])",
        "detail": "awesome_gallery.models.ir_ui_view",
        "documentation": {}
    },
    {
        "label": "OwlPlayground",
        "kind": 6,
        "importPath": "awesome_owl.controllers.controllers",
        "description": "awesome_owl.controllers.controllers",
        "peekOfCode": "class OwlPlayground(http.Controller):\n    @http.route(['/awesome_owl'], type='http', auth='public')\n    def show_playground(self):\n        \"\"\"\n        Renders the owl playground page\n        \"\"\"\n        return request.render('awesome_owl.playground')",
        "detail": "awesome_owl.controllers.controllers",
        "documentation": {}
    },
    {
        "label": "AccountMoveLine",
        "kind": 6,
        "importPath": "book_price.models.account_move_line",
        "description": "book_price.models.account_move_line",
        "peekOfCode": "class AccountMoveLine(models.Model):\n    _inherit = \"account.move.line\"\n    book_price = fields.Float(string=\"Book Price\", compute=\"_compute_book_price\")\n    @api.depends(\"product_id.lst_price\")\n    def _compute_book_price(self):\n        print(\" Book Price \".center(100, \"=\"))\n        for record in self:\n            print(record.move_type)\n            print(record.product_id.lst_price)\n            record.book_price = record.product_id.lst_price",
        "detail": "book_price.models.account_move_line",
        "documentation": {}
    },
    {
        "label": "SaleOrderLine",
        "kind": 6,
        "importPath": "book_price.models.sale_order_line",
        "description": "book_price.models.sale_order_line",
        "peekOfCode": "class SaleOrderLine(models.Model):\n    _inherit = \"sale.order.line\"\n    book_price = fields.Float(\n        string=\"Book Price\", readonly=True, compute=\"_compute_book_price\"\n    )\n    @api.depends(\"product_id.lst_price\")\n    def _compute_book_price(self):\n        for record in self:\n            record.book_price = record.product_id.lst_price",
        "detail": "book_price.models.sale_order_line",
        "documentation": {}
    },
    {
        "label": "Academy",
        "kind": 6,
        "importPath": "estate.controllers.estate_property_website",
        "description": "estate.controllers.estate_property_website",
        "peekOfCode": "class Academy(http.Controller):\n    @http.route(\n        [\"/properties\", \"/properties/page/<int:page>\"],\n        type=\"http\",\n        auth=\"public\",\n        website=True,\n    )\n    def index(self, page=1, **kw):\n        step = 6\n        offset = (page - 1) * step",
        "detail": "estate.controllers.estate_property_website",
        "documentation": {}
    },
    {
        "label": "TestProperty",
        "kind": 6,
        "importPath": "estate.models.estate_property",
        "description": "estate.models.estate_property",
        "peekOfCode": "class TestProperty(models.Model):\n    _name = \"estate.property\"\n    _description = \"Test proerty\"\n    _order = \"id desc\"\n    name = fields.Char(\"name\", required=True, default=\"My new House\")\n    description = fields.Text(\"description\")\n    postcode = fields.Char()\n    date_availability = fields.Date(\n        \"availability\",\n        default=(datetime.today() + relativedelta(months=3)).date(),",
        "detail": "estate.models.estate_property",
        "documentation": {}
    },
    {
        "label": "estate_property_offer",
        "kind": 6,
        "importPath": "estate.models.estate_property_offer",
        "description": "estate.models.estate_property_offer",
        "peekOfCode": "class estate_property_offer(models.Model):\n    _name = \"estate.property.offer\"\n    _description = \"Test proerty Offer\"\n    _order = \"price desc\"\n    price = fields.Float(\"price\", required=True)\n    status = fields.Selection(\n        [(\"Accepted\", \"Accepted\"), (\"Refused\", \"Refused\"), (\"Pending\", \"Pending\")],\n        default=\"Pending\",\n        copy=False,\n    )",
        "detail": "estate.models.estate_property_offer",
        "documentation": {}
    },
    {
        "label": "TestPropertyTags",
        "kind": 6,
        "importPath": "estate.models.estate_property_tags",
        "description": "estate.models.estate_property_tags",
        "peekOfCode": "class TestPropertyTags(models.Model):\n    _name = \"estate.property.tags\"\n    _description = \"Test proerty Tags\"\n    _order = \"name\"\n    name = fields.Char(\"name\")\n    color = fields.Integer(\"Color\", default=lambda self: self._default_color())\n    def _default_color(self):\n        return randint(1, 11)",
        "detail": "estate.models.estate_property_tags",
        "documentation": {}
    },
    {
        "label": "TestPropertyType",
        "kind": 6,
        "importPath": "estate.models.estate_property_type",
        "description": "estate.models.estate_property_type",
        "peekOfCode": "class TestPropertyType(models.Model):\n    _name = \"estate.property.type\"\n    _description = \"Test proerty Type\"\n    _order = \"name\"\n    name = fields.Char(\"name\")\n    propertys_id = fields.One2many(\"estate.property\", \"property_types_id\")\n    sequence = fields.Integer(\"Sequence\", default=1, help=\"Used to order type\")\n    offer_ids = fields.One2many(\n        \"estate.property.offer\", \"property_type_id\", string=\"offers\"\n    )",
        "detail": "estate.models.estate_property_type",
        "documentation": {}
    },
    {
        "label": "Inherited_User",
        "kind": 6,
        "importPath": "estate.models.inherited_user",
        "description": "estate.models.inherited_user",
        "peekOfCode": "class Inherited_User(models.Model):\n    _inherit = \"res.users\"\n    property_ids = fields.One2many(\n        \"estate.property\", \"sales_person_id\", string=\"property\"\n    )",
        "detail": "estate.models.inherited_user",
        "documentation": {}
    },
    {
        "label": "ProperyOffers",
        "kind": 6,
        "importPath": "estate.wizard.property_offers",
        "description": "estate.wizard.property_offers",
        "peekOfCode": "class ProperyOffers(models.TransientModel):\n    _name = \"propery.offers\"\n    _description = \"TransientModelmodel for offers\"\n    price = fields.Float(\"price\", required=True)\n    # property_ids = fields.Many2many(\"estate.property\", string=\"property_id\")\n    buyer_id = fields.Many2one(\"res.partner\", required=True)\n    validity = fields.Integer(default=7)\n    def make_offer(self):\n        print(self)\n        failed_properties = []",
        "detail": "estate.wizard.property_offers",
        "documentation": {}
    },
    {
        "label": "Property_Invoice",
        "kind": 6,
        "importPath": "estate_account.models.estate_property",
        "description": "estate_account.models.estate_property",
        "peekOfCode": "class Property_Invoice(models.Model):\n    _inherit = \"estate.property\"\n    def action_sold(self):\n        print(\" invoice \".center(100, \"=\"))\n        self.check_access(\"write\")\n        self.env[\"account.move\"].sudo().create(\n            {\n                \"partner_id\": self.buyer_id.id,\n                \"move_type\": \"out_invoice\",\n                \"invoice_line_ids\": [",
        "detail": "estate_account.models.estate_property",
        "documentation": {}
    },
    {
        "label": "ProductTemplate",
        "kind": 6,
        "importPath": "product_warranty.models.product_template",
        "description": "product_warranty.models.product_template",
        "peekOfCode": "class ProductTemplate(models.Model):\n    _inherit = \"product.template\"\n    is_warranty = fields.Boolean(default=False, string=\"Warranty\")\n    warranty_configuration_ids = fields.One2many(\n        \"product.warranty.configuration\", \"product_template_id\", string=\"Add Warranty\"\n    )",
        "detail": "product_warranty.models.product_template",
        "documentation": {}
    },
    {
        "label": "WarrantyConfiguration",
        "kind": 6,
        "importPath": "product_warranty.models.warranty",
        "description": "product_warranty.models.warranty",
        "peekOfCode": "class WarrantyConfiguration(models.Model):\n    _name = \"product.warranty.configuration\"\n    _description = \"product.warranty.configuration\"\n    name = fields.Char(string=\"name\", required=True)\n    product_template_id = fields.Many2one(\n        \"product.template\", required=True, ondelete=\"cascade\"\n    )\n    percentage = fields.Float()\n    years = fields.Integer(default=1)\n    @api.onchange(\"percentage\")",
        "detail": "product_warranty.models.warranty",
        "documentation": {}
    }
]